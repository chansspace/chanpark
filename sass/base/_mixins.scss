@mixin clear {
    *zoom:1;
    &:before, 
    &:after {
        content: " "; 
        display:table;
    }
    &:after {
        clear:both;
    }
}

@mixin img-block ($width, $height, $x, $y, $file:image, $bgcolor:transparent) {
    display:block; 
    width:$width; 
    height:$height; 
    content:''; 
    text-decoration:none; 
    background:$bgcolor url('../image/' + $file + '.png') no-repeat; 
    background-position:$x $y; 
    border:0;
}

@mixin img-inblock ($width, $height, $x, $y, $file:image, $bgcolor:transparent) {
    display:inline-block; 
    width:$width; 
    height:$height; 
    content:''; 
    text-decoration:none; 
    background:$bgcolor url('../image/' + $file + '.png') no-repeat; 
    background-position:$x $y; 
    border:0; 
    vertical-align:middle;
}

@mixin absolute ($i, $j, $type:tl) {
    position:absolute;    
    @if $type == tl {
        // top left
        top:$i;
        left:$j;    
    }
    @else if $type == tr {
        // top right
        top:$i;
        right:$j;  
    }
    @else if $type == bl {
        // bottom left
        bottom:$i;
        left:$j;  
    }
    @else if $type == br {
        // bottom right
        bottom:$i;
        right:$j;  
    }    
}

@mixin media-breakpoint-down($screen) {
    @if $screen == sm {
        @media screen and (min-width:0) and (max-width:($screen-sm - 0.1)) {
            @content;
        }
    }
    @else if $screen == md {
        @media screen and (min-width:$screen-sm) and (max-width:($screen-md - 0.1)) {
            @content;
        }
    }
    @else if $screen == lg {
        @media screen and (min-width:$screen-md) and (max-width:($screen-lg - 0.1)) {
            @content;
        }
    }
    @else if $screen == xl {
        @media screen and (min-width:$screen-lg) and (max-width:($screen-xl - 0.1)) {
            @content;
        }
    }
}

@mixin media-breakpoint-up($screen) {
    @if $screen == sm {
        @media screen and (min-width:$screen-sm) {
            @content;
        }
    }
    @else if $screen == md {
        @media screen and (min-width:$screen-md) {
            @content;
        }
    }
    @else if $screen == lg {
        @media screen and (min-width:$screen-lg) {
            @content;
        }
    }
    @else if $screen == xl {
        @media screen and (min-width:$screen-xl) {
            @content;
        }
    }
}

@mixin media-breakpoint-between($screen1, $screen2) {
 
    @if map-has-key($screen, $screen1) {
        @if map-has-key($screen, $screen2) {
            @media screen and (min-width: #{map-get($screen, $screen1)}) and (max-width: #{map-get($screen, $screen2)- 0.1} ) {
                @content;
            }
        }
    }

    
}

@mixin media-down($width) {
   
    @media screen and (max-width:$width) {
        @content;
    }
   
}

/* gradient color */
@mixin gradient($from, $to) {
    /* low ver.browser */
    background-color:$to;
    /* mozilla Firefox */
    background-image: -moz-linear-gradient($from, $to);
    /* opera */
    background-image: -o-linear-gradient($from, $to);
    /* WebKit (Safari 4+, Chrome 1+) */
    background-image: -webkit-linear-gradient(linear, left top, left bottom, color-stop(0, $from), color-stop(1, $to));
    background-image: -ms-linear-gradient($from, $to);
    background-image: linear-gradient($from, $to);
}